/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/HenryGits/hadoop-operator/apis/hadoop/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HadoopLister helps list Hadoops.
// All objects returned here must be treated as read-only.
type HadoopLister interface {
	// List lists all Hadoops in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Hadoop, err error)
	// Hadoops returns an object that can list and get Hadoops.
	Hadoops(namespace string) HadoopNamespaceLister
	HadoopListerExpansion
}

// hadoopLister implements the HadoopLister interface.
type hadoopLister struct {
	indexer cache.Indexer
}

// NewHadoopLister returns a new HadoopLister.
func NewHadoopLister(indexer cache.Indexer) HadoopLister {
	return &hadoopLister{indexer: indexer}
}

// List lists all Hadoops in the indexer.
func (s *hadoopLister) List(selector labels.Selector) (ret []*v1.Hadoop, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Hadoop))
	})
	return ret, err
}

// Hadoops returns an object that can list and get Hadoops.
func (s *hadoopLister) Hadoops(namespace string) HadoopNamespaceLister {
	return hadoopNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HadoopNamespaceLister helps list and get Hadoops.
// All objects returned here must be treated as read-only.
type HadoopNamespaceLister interface {
	// List lists all Hadoops in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Hadoop, err error)
	// Get retrieves the Hadoop from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Hadoop, error)
	HadoopNamespaceListerExpansion
}

// hadoopNamespaceLister implements the HadoopNamespaceLister
// interface.
type hadoopNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Hadoops in the indexer for a given namespace.
func (s hadoopNamespaceLister) List(selector labels.Selector) (ret []*v1.Hadoop, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Hadoop))
	})
	return ret, err
}

// Get retrieves the Hadoop from the indexer for a given namespace and name.
func (s hadoopNamespaceLister) Get(name string) (*v1.Hadoop, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("hadoop"), name)
	}
	return obj.(*v1.Hadoop), nil
}
